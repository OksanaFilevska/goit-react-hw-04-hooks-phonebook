{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","contacts","useState","name","setName","number","setNumber","handleChange","event","target","value","nameInputId","shortid","generate","numberInputId","reset","form","e","preventDefault","htmlFor","span","input","type","onChange","id","pattern","title","required","btn","ContactList","onDeleteContact","map","item","btnList","onClick","filterInputId","Filter","filter","onChangeFilter","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","entry","some","alert","currentTarget","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff75114d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2IJOy\",\"span\":\"Filter_span__jWdbR\",\"input\":\"Filter_input__X2cwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Zu0C\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number }, contacts);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>\r\n        <span className={s.span}>Name</span>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label htmlFor={numberInputId}>\r\n        <span className={s.span}>Number</span>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className=\"s.list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.item}>\r\n        <p className=\"s.contacts\">\r\n          {name}: <span>{number}</span>\r\n        </p>\r\n        <button type=\"button\" className={s.btnList} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport shortid from 'shortid';\r\n\r\nconst filterInputId = shortid.generate();\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label htmlFor={filterInputId}>\r\n      <span className={s.span}>Find contacts by name and number</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }, contacts) => {\n    const entry = {\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    };\n    contacts.some(contacts => contacts.name.toLowerCase() === name.toLowerCase())\n      ? alert(`${name} is already in contacts`)\n      : setContacts([entry, ...contacts]);\n  };\n\n  const getVisibleContacts = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) || contact.number.includes(filter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChangeFilter={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n\nexport default App;             ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__qJbs5\",\"span\":\"ContactForm_span__1Tj3_\",\"btn\":\"ContactForm_btn__2mHUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__drFd3\",\"item\":\"ContactList_item__16gFA\",\"btnList\":\"ContactList_btnList__2tXm2\"};"],"sourceRoot":""}